{"tagline":"Enables the automatic creation, building, and running of PhoneGap (Cordova) projects with Sencha Touch.","body":"Sencha Cordova Builder\r\n======================\r\n\r\nEnables the automatic creation, building, and running of PhoneGap (Cordova) projects with Sencha Touch. Since the project\r\nis just a collection of build files, all that's needed is to import a file in your Sencha Touch build.xml and implement\r\nyour logic where you want.\r\n\r\nThis current release was developed and tested on a Mac. It should work just as well on a PC but testing has not\r\nbeen done yet.\r\n\r\nThis project has absolutely no affiliation with Sencha or PhoneGap.\r\n\r\nReleased under the MIT license. See LICENSE.md for details.\r\n\r\nGoals\r\n-----\r\n\r\n- Simple installation and configuration\r\n- Keep it familiar, no extra tools/scripts required\r\n- Work with the framework, not against it\r\n- Use conventions already provided by Sencha Touch\r\n\r\nRequirements\r\n-----------\r\n\r\nAssuming you want to develop for both Android and iOS:\r\n\r\n- Android SDK\r\n- Mac\r\n- xCode\r\n- PhoneGap (Cordova) 2.2+\r\n- Sencha Touch 2.1+\r\n- Sencha Cmd 3.0+\r\n\r\nInstallation\r\n------------\r\n\r\n1. Download and extract the project\r\n2. Modify the `cordova.properties` file to match your environment. At a minimum you'll need to modify the `cordova.lib` property which is the path to your PhoneGap framework. Unless you're using PhoneGap 2.2, you might also need to modify the `cordova.android.tools.js` and `cordova.ios.tools.js` as these point to the PhoneGap javascript libraries for their respective platforms.\r\n3. Finally, import the main cordova build file into your Sencha Touch build.xml file then implement the build you want to run. Assuming the project is extracted to the root directory and you're building for Android:\r\n\r\n        <import file=\"/sencha-cordova-builder/build-cordova.xml\" />\r\n        <target name=\"-after-build\" depends=\"-build-android\" />\r\n\r\nUsage\r\n-----\r\n\r\n### Building for Android\r\n\r\nTo build for Android, plug into the `-after-build` target provided by Sencha Touch as follows:\r\n\r\n    <target name=\"-after-build\" depends=\"-build-android\" />\r\n\r\nThe Sencha Cordova Builder provides various steps for you to inject your own logic during some key phases in the build process.\r\n\r\n- -before-init-android\r\n- -after-init-android\r\n- -before-build-android\r\n- -after-build-android\r\n\r\nA common scenario might be to tap into the `-after-build-android` phase to automatically clean/compile/run your Android project. Assuming you're on a mac, here are some examples:\r\n\r\n    <target name=\"-after-build-android\">\r\n        <!-- clean -->\r\n        <exec executable=\"${cordova.android.project}/cordova/clean\" />\r\n\r\n        <!-- compile -->\r\n        <exec executable=\"${cordova.android.project}/cordova/debug\" />\r\n\r\n        <!-- emulate -->\r\n        <exec executable=\"${cordova.android.project}/cordova/emulate\" />\r\n\r\n        <!-- or all in one shot (clean, compile, emulate) -->\r\n        <exec executable=\"${cordova.android.project}/cordova/BOOM\" />\r\n    </target>\r\n    \r\nIf you want to rebuild the Android project, you'll need to delete the `_android.built` file that was placed in the root\r\nof your Sencha Touch app. This file is used as a flag to know when the build process has completed. \r\n\r\n### Building for iOS\r\n\r\nTo build for iOS, plug into the `-after-build` target provided by Sencha Touch as follows:\r\n\r\n    <target name=\"-after-build\" depends=\"-build-ios\" />\r\n\r\nThe Sencha Cordova Builder provides various steps for you to inject your own logic during some key phases in the build process.\r\n\r\n- -before-init-ios\r\n- -after-init-ios\r\n- -before-build-ios\r\n- -after-build-ios\r\n\r\nIf you want to rebuild the Android project, you'll need to delete the `_ios.built` file that was placed in the root\r\nof your Sencha Touch app. This file is used as a flag to know when the build process has completed. \r\n\r\n### Building Android and iOS Together\r\n\r\nAs a convenience, you can build Android and iOS together by plugging into the `-after-build` target provided by Sencha Touch as follows:\r\n\r\n    <target name=\"-after-build\" depends=\"-build-cordova-all\" />\r\n\r\nYou can of course still tap into the following phases:\r\n\r\n- -before-init-android\r\n- -after-init-android\r\n- -before-build-android\r\n- -after-build-android\r\n- -before-init-ios\r\n- -after-init-ios\r\n- -before-build-ios\r\n- -after-build-ios\r\n\r\nIf you want to rebuild the Android project, you'll need to delete the `_android.built` and `_ios.built` files that were placed in the root\r\nof your Sencha Touch app. These files are used as flags to know when the build process has completed. \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Sencha Cordova Builder"}